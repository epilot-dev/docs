{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "required": [
    "_schema",
    "type",
    "billing_amount",
    "booking_date"
  ],
  "properties": {
    "_schema": {
      "readOnly": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9_-]+$",
      "example": "contact",
      "description": "URL-friendly identifier for the entity schema"
    },
    "_id": {
      "readOnly": true,
      "type": "string",
      "format": "uuid",
      "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
      "description": "Unique identifier for the entity"
    },
    "_org": {
      "type": "string",
      "description": "Organization Id the entity belongs to",
      "readOnly": true,
      "example": "123"
    },
    "_title": {
      "readOnly": true,
      "type": "string",
      "nullable": true,
      "example": "John Doe",
      "description": "Generated title for the entity based on schema title_template"
    },
    "_tags": {
      "type": "array",
      "nullable": true,
      "items": {
        "type": "string"
      },
      "example": [
        "family:label"
      ],
      "description": "Entity Labels"
    },
    "type": {
      "type": "string",
      "enum": [
        "payment",
        "installment",
        "reimbursement",
        "dunning_fee",
        "chargeback",
        "final_bill",
        "bonus",
        "correction"
      ],
      "description": "Type"
    },
    "billing_amount_currency": {
      "type": "string",
      "description": "Three-letter ISO currency code, in lowercase. Must be a supported currency.",
      "example": "EUR"
    },
    "billing_amount_decimal": {
      "type": "string",
      "description": "The currency value as a decimal string",
      "example": "123.45"
    },
    "billing_amount": {
      "type": "number",
      "description": "Billing Amount"
    },
    "direction": {
      "type": "string",
      "enum": [
        "debit",
        "credit"
      ],
      "description": "Direction"
    },
    "booking_date": {
      "type": "string",
      "format": "date",
      "example": "2025-01-01",
      "description": "Booking Date"
    },
    "due_date": {
      "type": "string",
      "format": "date",
      "example": "2025-01-01",
      "description": "Due date"
    },
    "paid_date": {
      "type": "string",
      "format": "date",
      "example": "2025-01-01",
      "description": "Paid date"
    },
    "external_id": {
      "type": "string",
      "description": "External ID"
    },
    "external_link": {
      "$ref": "#/definitions/LinkAttribute",
      "description": "External Link"
    },
    "note": {
      "type": "string",
      "description": "Note"
    },
    "internal_note": {
      "type": "string",
      "description": "Internal Note"
    },
    "contract": {
      "$ref": "#/definitions/BaseRelation",
      "description": "Billing Account"
    },
    "related_event": {
      "$ref": "#/definitions/BaseRelation",
      "description": "Related Event"
    },
    "_files": {
      "$ref": "#/definitions/BaseRelation"
    },
    "_created_at": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "nullable": true,
      "description": "Timestamp of entity creation"
    },
    "_updated_at": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "nullable": true,
      "description": "Timestamp of entity last update"
    },
    "_owners": {
      "type": "array",
      "readOnly": true,
      "items": {
        "description": "The user / organization owning this entity.\n\nNote: Owner implicitly has access to the entity regardless of ACLs.\n",
        "type": "object",
        "properties": {
          "org_id": {
            "type": "string",
            "example": "123"
          },
          "user_id": {
            "type": "string",
            "example": "456"
          }
        },
        "required": [
          "org_id"
        ]
      }
    },
    "_acl": {
      "readOnly": true,
      "type": "object",
      "description": "Access control list (ACL) for an entity. Defines sharing access to external orgs or users.",
      "additionalProperties": true,
      "properties": {
        "view": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "org:456"
          }
        },
        "edit": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "org:456"
          }
        },
        "delete": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "org:456"
          }
        }
      }
    },
    "_manifest": {
      "readOnly": true,
      "type": "array",
      "nullable": true,
      "description": "Blueprint ID used to create/update the entity",
      "items": {
        "type": "string"
      },
      "example": [
        "123e4567-e89b-12d3-a456-426614174000"
      ]
    }
  },
  "definitions": {
    "LinkAttribute": {
      "type": "object",
      "description": "Link with title and href",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "link"
          ]
        },
        "title": {
          "type": "string",
          "example": "Visit Website"
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://example.com"
        }
      }
    },
    "BaseUUID": {
      "type": "string",
      "format": "uuid",
      "example": "123e4567-e89b-12d3-a456-426614174000"
    },
    "BaseTags": {
      "type": "array",
      "nullable": true,
      "items": {
        "type": "string"
      },
      "example": [
        "example"
      ]
    },
    "BaseRelation": {
      "type": "object",
      "nullable": true,
      "description": "Relation to another entity",
      "properties": {
        "$relation": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "entity_id": {
                "$ref": "#/definitions/BaseUUID"
              },
              "_tags": {
                "$ref": "#/definitions/BaseTags"
              }
            }
          }
        }
      }
    }
  }
}