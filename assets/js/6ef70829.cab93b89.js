"use strict";(self.webpackChunkepilot_dev_handbook=self.webpackChunkepilot_dev_handbook||[]).push([[4683],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=i,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(h,r(r({ref:t},p),{},{components:n})):a.createElement(h,r({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:i,r[1]=s;for(var l=2;l<o;l++)r[l]=n[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},94158:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(87462),i=(n(67294),n(3905));const o={sidebar_position:1},r="Authentication",s={unversionedId:"auth/authentication",id:"auth/authentication",title:"Authentication",description:"The epilot application uses standard OAuth 2.0 to authenticate.",source:"@site/docs/auth/authentication.md",sourceDirName:"auth",slug:"/auth/authentication",permalink:"/docs/auth/authentication",editUrl:"https://github.com/epilot-dev/docs/edit/main/docs/auth/authentication.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"appsSidebar",previous:{title:"Serverless",permalink:"/docs/architecture/serverless"},next:{title:"Access Tokens",permalink:"/docs/auth/access-tokens"}},c=[{value:"Quick Start",id:"quick-start",children:[],level:2},{value:"Cognito User Pools",id:"cognito-user-pools",children:[],level:2},{value:"User API",id:"user-api",children:[],level:2},{value:"Login with SDK",id:"login-with-sdk",children:[],level:2}],l={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"authentication"},"Authentication"),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The epilot application uses standard ",(0,i.kt)("a",{parentName:"p",href:"https://oauth.net/2/"},"OAuth 2.0")," to authenticate."))),(0,i.kt)("h2",{id:"quick-start"},"Quick Start"),(0,i.kt)("p",null,"You can login to obtain a token for testing epilot APIs quickly via the command line. (Requires ",(0,i.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/"},"Node.js"),")"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ npx @epilot/auth\n\n? Email email@example.com\n? Password [hidden]\n\n# <access token printed here>\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"OAuth tokens expire after a short period (60 min) and must be refreshed using a refresh token."),(0,i.kt)("p",{parentName:"div"},"For integration purposes we recommend using long term ",(0,i.kt)("a",{parentName:"p",href:"/docs/auth/access-tokens"},"Access Tokens"),"."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { authorizeWithToken } from '@epilot/auth'\nimport entityClient from '@epilot/entity-client'\n\nauthorizeWithToken(entityClient, '<my_access_token>')\n\n// you can now use entity client\n")),(0,i.kt)("h2",{id:"cognito-user-pools"},"Cognito User Pools"),(0,i.kt)("p",null,"Each epilot tenant gets their own Cognito User Pool for login."),(0,i.kt)("p",null,"Cognito also provides SSO and MFA functionality, configurable via Organisation Settings in epilot."),(0,i.kt)("h2",{id:"user-api"},"User API"),(0,i.kt)("p",null,"The epilot user API provides functionality to invite and manage users in epilot organisations."),(0,i.kt)("p",null,"The Cognito sync service part of the User API takes care of managing users in each User Pool."),(0,i.kt)("h2",{id:"login-with-sdk"},"Login with SDK"),(0,i.kt)("p",null,"While we recommend using ",(0,i.kt)("a",{parentName:"p",href:"/docs/auth/access-tokens"},"Access Tokens"),", you can also authenticate with your username and password using the the ",(0,i.kt)("a",{parentName:"p",href:"/docs/architecture/sdk"},"SDK"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"npm install --save @epilot/auth\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { authenticate } from '@epilot/auth'\nimport entityClient from '@epilot/entity-client'\n\nconst credentials = await authenticate({\n  username: 'email@example.com',\n  password: 'xxx',\n})\ncredentials.configureClient(entityClient)\n\n// entityClient is now authorized with epilot OAuth2 tokens\n")))}u.isMDXComponent=!0}}]);