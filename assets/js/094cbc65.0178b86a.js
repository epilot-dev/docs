"use strict";(self.webpackChunkepilot_dev_handbook=self.webpackChunkepilot_dev_handbook||[]).push([[7267],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),h=r,d=m["".concat(s,".").concat(h)]||m[h]||u[h]||o;return n?a.createElement(d,l(l({ref:t},c),{},{components:n})):a.createElement(d,l({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5957:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>o,contentTitle:()=>l,metadata:()=>i,toc:()=>s,default:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:5},l="Internal Auth",i={unversionedId:"auth/internal-auth",id:"auth/internal-auth",title:"Internal Auth",description:"[API Docs]",source:"@site/docs/auth/internal-auth.md",sourceDirName:"auth",slug:"/auth/internal-auth",permalink:"/docs/auth/internal-auth",editUrl:"https://github.com/epilot-dev/docs/edit/main/docs/auth/internal-auth.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Permissions",permalink:"/docs/auth/permissions"},next:{title:"Microfrontends",permalink:"/docs/portal/microfrontends"}},s=[{value:"Usage",id:"usage",children:[],level:2},{value:"Example Token",id:"example-token",children:[],level:2},{value:"Links",id:"links",children:[],level:2}],p={toc:s};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"internal-auth"},"Internal Auth"),(0,r.kt)("p",null,"[",(0,r.kt)("a",{parentName:"p",href:"/api/internal-auth"},"API Docs"),"]\n[",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@epilot/internal-auth"},"SDK"),"]"),(0,r.kt)("p",null,"To facilitate backend microservices calling each other, we provide an internal identity provider called ",(0,r.kt)("a",{parentName:"p",href:"/api/internal-auth"},"Internal Auth API")),(0,r.kt)("p",null,"The API works by converting the caller's IAM role to a valid JWT token accepted by the API Gateway Authorizer."),(0,r.kt)("p",null,"API calls must be called using a signed ",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"},"AWS SigV4")," request."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm install --save @epilot/internal-auth\n")),(0,r.kt)("p",null,"To be able to get internal tokens, your runtime role must have invoke permissions to this API."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# SAM example\nResources:\n  MyFunction:\n    Type: AWS::Serverless::Function\n    Policies:\n      - Statement:\n          - Effect: Allow\n            Action: execute-api:Invoke\n            Resource:\n              - arn:aws:execute-api:eu-central-1:*:*/*/GET/v1/internal-auth/auth # internal auth api\n              - arn:aws:execute-api:eu-central-1:*:*/*/GET/v?/mock-api/* # api you want to call\n")),(0,r.kt)("p",null,"Call the API to obtain your token"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { getToken } from "@epilot/internal-auth";\n\nconst token = await getToken();\n')),(0,r.kt)("h2",{id:"example-token"},"Example Token"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "callerIdentity": "arn:aws:sts::912468240823:assumed-role/ep_prod_access_admin/awsmfa_20210225T193753",\n  "policies": [\n    {\n      "Version": "2012-10-17",\n      "Statement": [\n        {\n          "Effect": "Allow",\n          "Action": "*",\n          "Resource": "*"\n        }\n      ]\n    }\n  ],\n  "iss": "https://internal-auth.sls.epilot.io/v1/internal-auth",\n  "iat": 1614278397,\n  "exp": 1614281997\n}\n')),(0,r.kt)("h2",{id:"links"},"Links"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Internal Auth package: ",(0,r.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/@epilot/internal-auth"},"https://www.npmjs.com/package/@epilot/internal-auth"))))}c.isMDXComponent=!0}}]);