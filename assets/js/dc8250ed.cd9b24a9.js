"use strict";(self.webpackChunkepilot_dev_handbook=self.webpackChunkepilot_dev_handbook||[]).push([[7418],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var i=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,s=function(e,t){if(null==e)return{};var n,i,s={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),m=p(n),d=s,b=m["".concat(l,".").concat(d)]||m[d]||c[d]||o;return n?i.createElement(b,r(r({ref:t},u),{},{components:n})):i.createElement(b,r({ref:t},u))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,r=new Array(o);r[0]=m;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:s,r[1]=a;for(var p=2;p<o;p++)r[p]=n[p];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9547:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var i=n(7462),s=(n(7294),n(3905));const o={sidebar_position:4},r="Submissions",a={unversionedId:"journeys/submissions",id:"journeys/submissions",title:"Submissions",description:"[API Docs]",source:"@site/docs/journeys/submissions.md",sourceDirName:"journeys",slug:"/journeys/submissions",permalink:"/docs/journeys/submissions",editUrl:"https://github.com/epilot-dev/docs/edit/main/docs/journeys/submissions.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Embedding Journeys",permalink:"/docs/journeys/embedding"},next:{title:"Journey Launcher",permalink:"/docs/journeys/journey-launcher"}},l=[{value:"Submission Entity",id:"submission-entity",children:[],level:2},{value:"Submission API",id:"submission-api",children:[],level:2},{value:"Passing Files",id:"passing-files",children:[],level:2}],p={toc:l};function u(e){let{components:t,...o}=e;return(0,s.kt)("wrapper",(0,i.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"submissions"},"Submissions"),(0,s.kt)("p",null,"[",(0,s.kt)("a",{parentName:"p",href:"/api/submission"},"API Docs"),"]\n[",(0,s.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@epilot/submission-client"},"SDK"),"]"),(0,s.kt)("p",null,"Submissions are entities that store raw data collected from Journeys or other outside data sources into epilot."),(0,s.kt)("p",null,"Submissions are created via the ",(0,s.kt)("a",{parentName:"p",href:"/api/submission"},"Submission API"),"."),(0,s.kt)("h2",{id:"submission-entity"},"Submission Entity"),(0,s.kt)("p",null,"A Submission entity does not have a fixed schema for all its data like other business entities, but rather is designed to collect the raw JSON payload to be further processed in other entities."),(0,s.kt)("p",null,"A typical use of submissions is to map the incoming submission payload into further business entities like Contacts, Opportunities and Orders using ",(0,s.kt)("a",{parentName:"p",href:"/docs/automation/automation-flows"},"Automation"),"."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Submission Example",src:n(6812).Z,width:"1606",height:"1206"})),(0,s.kt)("h2",{id:"submission-api"},"Submission API"),(0,s.kt)("p",null,"The Submission API can be used by external journeys to create Submission entities."),(0,s.kt)("p",null,"See [",(0,s.kt)("a",{parentName:"p",href:"/api/submission"},"Submission API Docs"),"] for examples."),(0,s.kt)("h2",{id:"passing-files"},"Passing Files"),(0,s.kt)("p",null,"Submission API can be used together with ",(0,s.kt)("a",{parentName:"p",href:"https://docs.epilot.io/api/file"},"File API")," to pass file uploads to submissions using the following flow:"),(0,s.kt)("p",null,"Use the ",(0,s.kt)("inlineCode",{parentName:"p"},"uploadFile")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"uploadFilePublic")," operation of File API to generate a temporary upload URL and receive an s3ref:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"POST https://file.sls.epilot.io/v1/files/public/upload\n")),(0,s.kt)("p",null,"Request Body:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'// application/json\n{\n  "filename": "document.pdf",\n  "mime_type": "application/pdf"\n}\n')),(0,s.kt)("p",null,"Response (200):"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'// application/json\n{\n  "s3ref": {\n    "bucket": "epilot-user-content",\n    "key": "temp/123/4d689aeb-1497-4410-a9fe-b36ca9ac4389/document.pdf"\n  },\n  "upload_url": "https://epilot-files-prod.s3.eu-central-1.amazonaws.com/123/temp/4d689aeb-1497-4410-a9fe-b36ca9ac4389/document.pdf?AWSParams=123"\n}\n')),(0,s.kt)("p",null,"Then, upload a file with a ",(0,s.kt)("inlineCode",{parentName:"p"},"PUT")," operation to the generated upload_url. (Hint: make sure you pass the correct Content-Type header and encoding!)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"PUT https://epilot-files-prod.s3.eu-central-1.amazonaws.com/123/temp/4d689aeb-1497-4410-a9fe-b36ca9ac4389/document.pdf?AWSParams=123\n")),(0,s.kt)("p",null,"Request Body:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"(binary data)\n")),(0,s.kt)("p",null,"After the file has uploaded, pass the ",(0,s.kt)("inlineCode",{parentName:"p"},"s3ref")," in the ",(0,s.kt)("inlineCode",{parentName:"p"},"entities.*.files")," attribute in your Submission API payload:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"POST https://submission.sls.epilot.io/v1/submission/submissions\n")),(0,s.kt)("p",null,"Request Body:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'// application/json\n{\n  "organization_id": "123",\n  "source_type": "api",\n  "source_id": "example",\n  "entities": [\n    {\n      "_schema": "submission",\n      "description": "Submission with files",\n      "files": [\n        {\n          "s3ref": {\n            "bucket": "epilot-user-content",\n            "key": "temp/123/4d689aeb-1497-4410-a9fe-b36ca9ac4389/document.pdf"\n          }\n        }\n      ]\n    }\n  ]\n}\n')))}u.isMDXComponent=!0},6812:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/submission-b28cf54257a8e61c01420b206281f97a.png"}}]);