"use strict";(self.webpackChunkepilot_dev_handbook=self.webpackChunkepilot_dev_handbook||[]).push([[3758],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),d=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(a),m=i,h=u["".concat(l,".").concat(m)]||u[m]||c[m]||r;return a?n.createElement(h,o(o({ref:t},p),{},{components:a})):n.createElement(h,o({ref:t},p))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:i,o[1]=s;for(var d=2;d<r;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},80004:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var n=a(87462),i=(a(67294),a(3905));const r={sidebar_position:1},o="Epilot Datalake",s={unversionedId:"datalake/epilot-datalake",id:"datalake/epilot-datalake",title:"Epilot Datalake",description:"Welcome to the documentation for our Data Lake feature, which serves as the centralized repository for real-time event streams of entity operations, snapshots of workflow executions, journey analytics and portal analytics data. This feature empowers users to access and analyze essential data generated by the epilot portal, including changes to entities such as orders, opportunities, contacts, accounts, products, interactions from user journeys, customer portal, installer portal and more.",source:"@site/docs/datalake/epilot-datalake.mdx",sourceDirName:"datalake",slug:"/datalake/epilot-datalake",permalink:"/docs/datalake/epilot-datalake",editUrl:"https://github.com/epilot-dev/docs/edit/main/docs/datalake/epilot-datalake.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"appsSidebar",previous:{title:"Example: 3rd Party Journey",permalink:"/docs/integrations/3rd-party-journeys"},next:{title:"Single Sign On",permalink:"/docs/sso/single-sign-on"}},l=[{value:"Data Schemas",id:"data-schemas",children:[{value:"1. Entity Operations Event Streams",id:"1-entity-operations-event-streams",children:[],level:3},{value:"2: Workflow Execution Snapshots",id:"2-workflow-execution-snapshots",children:[],level:3},{value:"3. Journey Analytics",id:"3-journey-analytics",children:[],level:3},{value:"4. Portal Analytics",id:"4-portal-analytics",children:[],level:3}],level:2},{value:"Setting up Datalake",id:"setting-up-datalake",children:[{value:"Generate datalake credentials",id:"generate-datalake-credentials",children:[],level:3}],level:2},{value:"Querying the Data",id:"querying-the-data",children:[{value:"Directly Quering via SQL",id:"directly-quering-via-sql",children:[],level:3},{value:"Connecting to BI Tools",id:"connecting-to-bi-tools",children:[],level:3}],level:2},{value:"Interactive PowerBI report using Epilot Datalake",id:"interactive-powerbi-report-using-epilot-datalake",children:[],level:2},{value:"Interactive PowerBI report for Journey Analytics using Epilot Datalake",id:"interactive-powerbi-report-for-journey-analytics-using-epilot-datalake",children:[],level:2}],d={toc:l},p="wrapper";function u(e){let{components:t,...r}=e;return(0,i.kt)(p,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"epilot-datalake"},"Epilot Datalake"),(0,i.kt)("p",null,"Welcome to the documentation for our Data Lake feature, which serves as the centralized repository for real-time event streams of entity operations, snapshots of workflow executions, journey analytics and portal analytics data. This feature empowers users to access and analyze essential data generated by the epilot portal, including changes to entities such as orders, opportunities, contacts, accounts, products, interactions from user journeys, customer portal, installer portal and more."),(0,i.kt)("p",null,"Our Data Lake is seamlessly integrated with Clickhouse for data warehousing, enabling the users to leverage Business Intelligence (BI) tools and create insightful reports. This documentation will guide you through the key components of the Data Lake feature, including data schemas, usage, and credential management."),(0,i.kt)("p",null,"Feel free to contact our customer support or sales for help in enabling this datalake feature for your organization."),(0,i.kt)("h2",{id:"data-schemas"},"Data Schemas"),(0,i.kt)("p",null,"Our Data Lake features two distinct datasets:"),(0,i.kt)("h3",{id:"1-entity-operations-event-streams"},"1. Entity Operations Event Streams"),(0,i.kt)("p",null,"This dataset captures real-time event streams of entity operations. "),(0,i.kt)("p",null,"The schema for entity operations is as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "activity_id": "string",  // ID for the individual entity operation/activity\n    "entity_id": "string",    // ID of the entity being mutated\n    "org_id": "string",       // Organization ID\n    "operation": "string",    // Operation can be "createEntity," "updateEntity," or "deleteEntity"\n    "schema": "string",       // Schema of the entity\n    "timestamp": "DateTime",  // Timestamp of the entity mutation\n    "detail": "string",       // Stringified JSON payload containing entity data\n}\n')),(0,i.kt)("p",null,"Fields of interest in this schema include:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Operation"),": Describes the type of entity operation, including creation, update, or deletion."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"createEntity"),": This operation type is recorded when a new entity is created."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"updateEntity"),": This operation type is recorded when an existing entity is updated."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"deleteEntity"),": This operation type is recorded when an entity is deleted.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"timestamp"),": Provides a timestamp for building time series reports."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"activity_id")," and ",(0,i.kt)("strong",{parentName:"p"},"entity_id"),": These fields contain unique identifiers that can be used to track individual entity operations (activity_id) and identify the specific entity that was mutated (entity_id)."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"detail"),": The detail field contains a stringified JSON payload that includes the full entity data at the time of the operation. This payload can be parsed and used to access detailed information about the entity's state during the operation."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Additionally, we offer a simplified view called ",(0,i.kt)("strong",{parentName:"p"},"{org_id}_current_entities_final"),", which displays only the latest state of currently active entities in the organization, excluding deleted entities")),(0,i.kt)("h3",{id:"2-workflow-execution-snapshots"},"2: Workflow Execution Snapshots"),(0,i.kt)("p",null,"In addition to entity operations, we ingest real-time updates from workflow executions, allowing users to access current snapshots of workflow data. This dataset comprises five tables:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"{org_id}_workflow_executions_final"),"\nThis table contains all the attributes of workflow execution data.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"{org_id}_workflow_phases_final"),"\nHere, you can find attributes of the various phases involved in a workflow execution.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"{org_id}_workflow_tasks_final"),"\nThis table stores attributes related to individual steps or tasks within a workflow execution.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"{org_id}_workflow_cancellations_final"),"\nThis table records data regarding the reasons for workflow execution cancellations.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"{org_id}_workflow_contexts_final"),"\nContains information about related entities associated with a workflow execution."),(0,i.kt)("div",null,(0,i.kt)("iframe",{title:"Workflows DB Schema",width:"100%",height:"600px",src:"https://drawsql.app/teams/epilot/diagrams/workflows/embed"})))),(0,i.kt)("p",null,"To know more about workflow execution details, please refer ",(0,i.kt)("a",{parentName:"p",href:"/api/workflow-execution#tag/Workflows/operation/getExecution"},"here")),(0,i.kt)("h3",{id:"3-journey-analytics"},"3. Journey Analytics"),(0,i.kt)("p",null,"This dataset showcases the user sessions created for each journey and the interactions that occur within those sessions."),(0,i.kt)("p",null,"The schema for journey sessions is as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "string",  // Unique identifier for the session (UUID)\n    "org_id": "string",  // Unique identifier for the organization associated with the session (UUID)\n    "journey_id": "string",  // Unique identifier for the user journey to which the session belongs (UUID)\n    "start_time": "datetime",  // Timestamp indicating when the session started\n    "details": "string",  // Additional details about the session, in JSON format\n    "end_time": "datetime",  // Timestamp indicating when the session ended\n    "last_updated_at": "datetime", // Timestamp indicating when was the session last updated at\n}\n')),(0,i.kt)("p",null,"Fields of interest in this schema include:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"details"),": This field possibly contains basic user's browser session details"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"deviceType"),": The type of device used by the user (e.g., mobile, desktop)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"osType"),": The operating system of the device (e.g., iOS, Android, Windows)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"browserTypeAndVersion"),": The browser name and version used by the user (e.g., Chrome 92, Firefox 89)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"screenResolution"),": The screen resolution of the user's device (e.g., 1920x1080)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"viewportSize"),": The size of the viewport in the browser (i.e., the visible area of the web page)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"colorDepth"),": The color depth of the user's display (e.g., 24)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"languagePreference"),": The preferred language set in the user's browser (e.g., en-US, fr-FR)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ip"),": The IP address of the user's device when the event was recorded."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"embeddedIn"),": The website or platform on which the journey is embedded."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"isLauncherJourney"),": The journey for which the session was created is a launcher journey or not")),(0,i.kt)("p",null,"The schema for journey events is as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "string",  // Unique identifier for the event (UUID)\n    "org_id": "string",  // Identifier of the organization associated with the event\n    "session_id": "string",  // Unique identifier for the session in which the event occurred (UUID)\n    "journey_id": "string",  // Unique identifier for the user journey to which the event belongs (UUID)\n    "type": "string",  // Type of event (e.g., "step_navigation", "journey_submit", "journey_exit")\n    "details": "string",  // Additional details about the event, typically in JSON format\n    "created_at": "datetime"  // Timestamp indicating when the event was recorded\n}\n')),(0,i.kt)("p",null,"Fields of interest in this schema include:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"type"),": This field contains the type of user interaction or event that occurs on the session"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"journey_load_time"),": The time it takes for the journey to load, typically measured from journey API response time."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"step_navigation"),": The event triggered when a user navigates from one step to another within the journey."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"journey_submit"),": The event triggered when a user completes and submits the journey."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"journey_exit"),": The event triggered when a user exits the journey, possibly by closing or refreshing the journey tab in the browser.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"details"),": This field contains additional details about the type of event that occurs. Basically ",(0,i.kt)("inlineCode",{parentName:"p"},"fromStepName"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fromStepNumber"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"toStepName")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"toStepNumber")," on a ",(0,i.kt)("inlineCode",{parentName:"p"},"step_navigation")," event, ",(0,i.kt)("inlineCode",{parentName:"p"},"stepNumber")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"stepName")," on which the ",(0,i.kt)("inlineCode",{parentName:"p"},"journey_exit")," occurred and time taken for journeys to load."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"{org_id}_journey_sessions_final"),"\nThis table stores the above attributes related to journey sessions.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"{org_id}_journey_events_final"),"\nThis table stores the above attributes related to journey events."))),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Journey analytics db schema",src:a(17776).Z,width:"697",height:"320"})),(0,i.kt)("h3",{id:"4-portal-analytics"},"4. Portal Analytics"),(0,i.kt)("p",null,"This dataset highlights user sessions generated during each portal login and details the interactions that occur within these sessions. It captures key metrics and events to provide insights into user behavior and engagement patterns."),(0,i.kt)("p",null,"The schema for portal sessions is as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "string",  // Unique identifier for the session (UUID)\n    "org_id": "string",  // Identifier of the organization associated with the event\n    "app_name": "string", // Name of the app for which the session was created (customer portal, installer portal etc.)\n    "start_time": "datetime",  // Timestamp indicating when the session started\n    "details": "string",  // Additional details about the session, in JSON format\n    "end_time": "datetime",  // Timestamp indicating when the session ended\n    "last_updated_at": "datetime", // Timestamp indicating when was the session last updated at\n}\n')),(0,i.kt)("p",null,"Fields of interest in this schema include:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"details"),": This field possibly contains basic user's browser session details"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"deviceType"),": The type of device used by the user (e.g., mobile, desktop)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"osType"),": The operating system of the device (e.g., iOS, Android, Windows)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"browserTypeAndVersion"),": The browser name and version used by the user (e.g., Chrome 92, Firefox 89)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"screenResolution"),": The screen resolution of the user's device (e.g., 1920x1080)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"viewportSize"),": The size of the viewport in the browser (i.e., the visible area of the web page)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"colorDepth"),": The color depth of the user's display (e.g., 24)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"languagePreference"),": The preferred language set in the user's browser (e.g., en-US, fr-FR)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ip"),": The IP address of the user's device when the event was recorded."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"email"),": The email ID of the logged in user."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"domainName"),": The app domain in which the session was created"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"referrer"),": The user was referred or directed from which site ")),(0,i.kt)("p",null,"The schema for portal events is as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "string",  // Unique identifier for the event (UUID)\n    "org_id": "string",  // Identifier of the organization associated with the event\n    "session_id": "string",  // Unique identifier for the session in which the event occurred (UUID)\n    "app_name": "string", // Name of the app for which the event was created (customer portal, installer portal etc.)\n    "type": "string",  // Type of event (e.g., "user_logged_in", "page_navigation", etc.)\n    "details": "string",  // Additional details about the event, in JSON format\n    "created_at": "datetime"  // Timestamp indicating when the event was recorded\n}\n')),(0,i.kt)("p",null,"Fields of interest in this schema include:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"type"),": This field contains the type of user interaction or event that occurs on the session"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"user_logged_in"),": User successfully logged into the portal."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"user_registered"),": A new user successfully registered."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"add_contract_initiated"),": User started adding a new contract."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"additional_info_update_initiated"),": User began updating additional info (it is a wrapper term for all the additional or custom information section that an organization configures for its portal)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"additional_info_updated"),": User successfully updated additional information."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"additional_info_viewed"),": User viewed additional information details."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"all_documents_downloaded"),": User downloaded all available documents in a section."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"contract_added"),": A new contract was successfully added."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"contract_due_date_changed"),": User updated the contract\u2019s due date."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"contract_payment_rate_changed"),": User changed the payment rate for a contract."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"contracts_listing_viewed"),": User viewed the list of all contracts."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"contract_viewed"),": User opened and viewed a specific contract."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"document_deleted"),": A document was removed by the user."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"document_downloaded"),": User downloaded a specific document."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"document_uploaded"),": A document was uploaded by the user."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"documents_listing_viewed"),": User viewed a list of uploaded documents."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"external_website_opened"),": User navigated to an external website."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"journey_opened"),": User initiated a new journey workflow."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"journey_closed"),": User exited a specific journey workflow."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"meter_reading_submission_initiated"),": User started submitting meter reading."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"meter_reading_submitted"),": A meter reading was successfully submitted."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"meters_listing_viewed"),": User viewed the list of available meters."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"meter_viewed"),": User opened details for a specific meter."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"meter_widget_viewed"),": User viewed a widget related to meters."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"opportunities_listing_viewed"),": User browsed the list of opportunities."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"opportunity_viewed"),": User opened and viewed an opportunity\u2019s details."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"order_accepted"),": User accepted a specific order."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"order_refused"),": User declined a specific order."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"order_viewed"),": User viewed details of a particular order."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"orders_listing_viewed"),": User accessed the list of available orders."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"page_navigation"),": User navigated between application pages."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"password_changed"),": User successfully updated their account password."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"payments_listing_viewed"),": User browsed the list of all payments."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"product_viewed"),": User viewed details of a specific product."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"teaser_opened"),": User clicked and opened a teaser content."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"user_account_deleted"),": User\u2019s account was removed or deleted."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"user_email_changed"),": User updated their email address."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"user_logged_out"),": User logged out from the application.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"details"),": This field contains additional details about the type of event that occurs. Basically from and to page URLs for page_navigation, entity details for contracts, orders, meter readings, documents, journeys etc, external links opened, custom information updates etc."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"{org_id}_portal_sessions_final"),"\nThis table stores the above attributes related to portal sessions.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"{org_id}_portal_events_final"),"\nThis table stores the above attributes related to portal events."))),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Portal analytics db schema",src:a(19294).Z,width:"982",height:"504"})),(0,i.kt)("h2",{id:"setting-up-datalake"},"Setting up Datalake"),(0,i.kt)("h3",{id:"generate-datalake-credentials"},"Generate datalake credentials"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'Navigate to the "Settings" menu on the top right in your organization\'s portal. Then locate the "Data Lake" section from the drop down menu.\n',(0,i.kt)("img",{alt:"Datalake menu",src:a(737).Z,width:"872",height:"656"}))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Data Lake page")," will display active credentials for your Data Lake. Here, you can revoke existing credentials or create new ones as needed.\n",(0,i.kt)("img",{alt:"Datalake page",src:a(84882).Z,width:"2802",height:"774"}))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"To create new credentials, select the ",(0,i.kt)("inlineCode",{parentName:"p"},"Generate Credentials")," button.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"A new set of credentials will be generated. Note that the password will be visible only once at the time of creation for security reasons, so it's crucial to save it securely.\n",(0,i.kt)("img",{alt:"Datalake Credentials",src:a(65777).Z,width:"1124",height:"1276"}))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Utilize the generated ",(0,i.kt)("inlineCode",{parentName:"p"},"username"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"host"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"port"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"database")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"password")," details to connect to the Data Lake from any BI tool or other data sources."))),(0,i.kt)("h2",{id:"querying-the-data"},"Querying the Data"),(0,i.kt)("p",null,"Once you've set up the necessary credentials, you can connect to the Clickhouse data warehouse and query the data. There are two primary ways to interact with the data:"),(0,i.kt)("h3",{id:"directly-quering-via-sql"},"Directly Quering via SQL"),(0,i.kt)("p",null,"You can write SQL queries to retrieve the data directly from Clickhouse using SQL functions. Below are examples illustrating how to query the data for insights."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 1: Reporting Opportunities Created Over Time"),"\nSuppose you need to create a report showing opportunities created over time, grouped by journey source, with a time granularity of months. You can use SQL to accomplish this task:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"select\n    count(*) as count,\n    JSONExtractString(detail, 'payload', 'source', 'title') as journey_source,\n    toStartOfYear (timestamp) as year,\n    toStartOfMonth(timestamp) as month\nfrom\n    entity_operations\nwhere\n    and schema = 'opportunity'\n    and operation = 'createEntity'\ngroup by\n    journey_source,\n    year,\n    month;\n")),(0,i.kt)("p",null,"This SQL query retrieves data about opportunities created over time, extracts relevant information from the JSON payload, and aggregates it by year and month, providing insights into opportunities created during different periods."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Datalake page",src:a(6735).Z,width:"1924",height:"806"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 2: Reporting Journey Sessions Created Over Time"),"\nSuppose you need to create a report showing journey sessions created over time for a specific journey. You can use SQL to accomplish this task:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"select\n    journey_id,\n    start_time,\n    details\nfrom\n    {org_id}_journey_sessions_final\nwhere\n    journey_id = {your_journey_id}\n    and\n    start_time > '2024-08-01 00:00:00'\n")),(0,i.kt)("p",null,"This SQL query retrieves the journey sessions created over time for a specific journey"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Datalake page",src:a(12826).Z,width:"704",height:"523"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 3: Reporting Portal Sessions Created Over Time"),"\nSuppose you need to create a report showing portal sessions created over time for a specific portal like customer portal or installer portal. You can use SQL to accomplish this task:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"select\n    app_name,\n    start_time,\n    details\nfrom\n    {org_id}_portal_sessions_final\nwhere\n    app_name = {your_app_name}\n    and\n    start_time > '2024-08-01 00:00:00'\n")),(0,i.kt)("p",null,"This SQL query retrieves the portal sessions created over time for a specific portal"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Datalake page",src:a(26140).Z,width:"1544",height:"726"})),(0,i.kt)("p",null,"You can use any SQL client to connect to the Clickhouse Data Warehouse (DWH) using the credentials provided. For more detailed information, please refer to ",(0,i.kt)("a",{parentName:"p",href:"https://clickhouse.com/docs/en/integrations/datagrip"},"this link"),"."),(0,i.kt)("h3",{id:"connecting-to-bi-tools"},"Connecting to BI Tools"),(0,i.kt)("p",null,"Alternatively, you can connect to Business Intelligence (BI) tools of your choice to load the data from Clickhouse and build reports and dashboards. Many BI tools support direct integration with Clickhouse, allowing you to create visually appealing and interactive reports based on your data or alternatively you can make use of official ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ClickHouse/clickhouse-odbc/releases"},"Clickhouse ODBC driver")," to establish the connection setup with Clickhouse."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Example")," - we will walk you through an example of connecting to Power BI to create a demo BI report for ",(0,i.kt)("inlineCode",{parentName:"p"},"Raven Energy GmbH"),", an energy utility company with two distinct journeys and workflow processes for handling ",(0,i.kt)("inlineCode",{parentName:"p"},"Wallbox")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Energieausweis")," sales digitally. Each use case involves two products. We will leverage our Data Lake to set up a BI report for this scenario.")),(0,i.kt)("p",null,"To get started with the various ways to establish a connection between Clickhouse and PowerBI, please refer to ","[this link]"," (",(0,i.kt)("a",{parentName:"p",href:"https://clickhouse.com/docs/en/integrations/powerbi"},"https://clickhouse.com/docs/en/integrations/powerbi"),")."),(0,i.kt)("p",null,"Steps to Create a Power BI Report:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Open Power BI"),": Once you have installed all the necessary dependencies to set up an ODBC connection as specified in the link above, you can add a new data source by selecting the ODBC option from the list of supported connectors.\n",(0,i.kt)("img",{alt:"Power BI ODBC",src:a(54824).Z,width:"1354",height:"1320"}))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Enter Connection Details"),': Enter the required connection details, including the ODBC connection, username, password, and the specific database. Then, click "OK" to establish the connection.'))),(0,i.kt)("p",null,"Example ODBC Connection String -  ",(0,i.kt)("inlineCode",{parentName:"p"},"Driver={ClickHouse ODBC Driver (ANSI)};Server={replace-it-with-host};Port=8443;Database=datawarehouse;")," "),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Power BI Connection",src:a(68063).Z,width:"1398",height:"1052"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Select Data"),': Once connected, Power BI will display the available schemas and tables. You can easily locate the "entity_operations" table within the "datawarehouse" schema, along with the "{org_id}_current_entities_final" simplified view for easier data access.')),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Power BI Entity Operations",src:a(63003).Z,width:"1758",height:"1396"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Load or Transform Data"),': You have two options for data handling. You can click "Load Data" to load all the raw data directly into Power BI. Alternatively, you can click "Transform" to access Power BI\'s query editor, where you can define your custom transformation logic to preprocess and shape the data to your specific requirements.')),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Power BI Current Entities",src:a(15186).Z,width:"1754",height:"1384"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Data Modeling"),": After loading or transforming the data, you can begin setting up data models. Create relationships between different tables to enable seamless data exploration and reporting. For example, you can establish relationships between the entity_operations data and other relevant tables in your dataset.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Power BI Data Model",src:a(26665).Z,width:"2682",height:"590"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Report Creation"),": With the data modeling in place, you can start creating visually appealing reports within Power BI. Utilize various chart types, tables, and visuals to convey insights effectively.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Power BI Report",src:a(70466).Z,width:"2970",height:"1354"}),"\n",(0,i.kt)("img",{alt:"Power BI Report",src:a(31467).Z,width:"857",height:"492"})),(0,i.kt)("h2",{id:"interactive-powerbi-report-using-epilot-datalake"},"Interactive PowerBI report using Epilot Datalake"),(0,i.kt)("div",null,(0,i.kt)("iframe",{title:"raven bi",width:"100%",height:"600",src:"https://app.powerbi.com/view?r=eyJrIjoiZDQ4MmQzNzAtODVlYy00MjdiLTg5ODMtNzVhNmMxOTU4OGUzIiwidCI6IjMzZDRmM2U1LTNkZjItNDIxZS1iOTJlLWE2M2NmYTY4MGE4OCJ9",frameborder:"0",allowFullScreen:"true"})),(0,i.kt)("p",null,"Our Data Lake feature provides a powerful way to capture and analyze real-time entity operations, enabling you to gain valuable insights from your data. By understanding the data schema and following the steps to set up credentials, you can leverage this feature to build reports, perform analytics, and make data-driven decisions for your organization."),(0,i.kt)("h2",{id:"interactive-powerbi-report-for-journey-analytics-using-epilot-datalake"},"Interactive PowerBI report for Journey Analytics using Epilot Datalake"),(0,i.kt)("div",null,(0,i.kt)("iframe",{title:"raven bi",width:"100%",height:"600",src:"https://app.powerbi.com/view?r=eyJrIjoiZGM2MjI0NzgtZGQ2Zi00NzVjLWFmYjAtZDdhOWVkNmJhYzFiIiwidCI6IjMzZDRmM2U1LTNkZjItNDIxZS1iOTJlLWE2M2NmYTY4MGE4OCJ9",frameborder:"0",allowFullScreen:"true"})),(0,i.kt)("p",null,"Our Journey Analytics Data lake feature offers a comprehensive solution to track and analyze user journeys in real-time, providing you with deep insights into how users interact with your journeys. By capturing detailed event data, such as step navigations, form submissions, and user exits, you can gain a clear understanding of user behavior and identify opportunities for optimization."),(0,i.kt)("p",null,"You can also refer to the following link to establish connection to ",(0,i.kt)("a",{parentName:"p",href:"https://clickhouse.com/docs/en/integrations/data-visualization"},"different BI tools.")),(0,i.kt)("p",null,"If you have any further questions or need assistance with data queries, please reach out to our team."))}u.isMDXComponent=!0},65777:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/datalake-credentials-fafbef14598a9fb836fd46a1e109cc49.png"},737:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/datalake-menu-fd0a3a932930ddb350df6d76ea239e6e.png"},84882:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/datalake-page-feba4fa5ae043089c3f86290a0c26ed9.png"},17776:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/journey-analytics-db-schema-a6429f1377c411dc860faa987091b2d3.png"},12826:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/journey_analytics_query_result-4ac916336a03776127980dc7f9ba22d1.png"},6735:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/opportunity-time-series-927ebb568a5cd85d7b78840309a9b296.png"},19294:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/portal-analytics-db-schema-b08c6c193d5c39ba2a14c7aa7ea7af0e.png"},26140:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/portal_analytics_query_result-9271db99ba95a03a1f54000d1763c077.png"},68063:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/powerbi-connection-d7f7368a1631f36e767d9149c2e7c4f8.png"},15186:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/powerbi-current-entities-dc3c5232582ae3f2d33880eb531e410c.png"},26665:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/powerbi-data-model-3e7e7fc48dde261f11f00554fb5a3e28.png"},63003:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/powerbi-entity-operations-86de3c142396214b27c5ea13d7ad3120.png"},31467:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/powerbi-journey-analytics-report-bc18aea7df800df9d8049ccb96ed7260.png"},54824:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/powerbi-odbc-826ee26c6e4556feaecc36b0c2b33e95.png"},70466:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/powerbi-report-575b56af8a31334160dfe7aed52c26ca.png"}}]);