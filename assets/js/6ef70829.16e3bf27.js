"use strict";(self.webpackChunkepilot_dev_handbook=self.webpackChunkepilot_dev_handbook||[]).push([[4683],{3905:function(t,e,n){n.d(e,{Zo:function(){return s},kt:function(){return h}});var r=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var u=r.createContext({}),l=function(t){var e=r.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},s=function(t){var e=l(t.components);return r.createElement(u.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,o=t.originalType,u=t.parentName,s=c(t,["components","mdxType","originalType","parentName"]),d=l(n),h=i,f=d["".concat(u,".").concat(h)]||d[h]||p[h]||o;return n?r.createElement(f,a(a({ref:e},s),{},{components:n})):r.createElement(f,a({ref:e},s))}));function h(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=n.length,a=new Array(o);a[0]=d;var c={};for(var u in e)hasOwnProperty.call(e,u)&&(c[u]=e[u]);c.originalType=t,c.mdxType="string"==typeof t?t:i,a[1]=c;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4158:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return s},default:function(){return d}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],c={sidebar_position:1},u="Authentication",l={unversionedId:"auth/authentication",id:"auth/authentication",title:"Authentication",description:"The epilot application uses standard OAuth 2.0 for user authentication.",source:"@site/docs/auth/authentication.md",sourceDirName:"auth",slug:"/auth/authentication",permalink:"/docs/auth/authentication",editUrl:"https://github.com/epilot-dev/docs/edit/main/docs/auth/authentication.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Component Library",permalink:"/docs/architecture/component-library"},next:{title:"Authorization",permalink:"/docs/auth/authorization"}},s=[{value:"Quick Start",id:"quick-start",children:[],level:2},{value:"Cognito User Pools",id:"cognito-user-pools",children:[],level:2},{value:"User API",id:"user-api",children:[],level:2}],p={toc:s};function d(t){var e=t.components,n=(0,i.Z)(t,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"authentication"},"Authentication"),(0,o.kt)("p",null,"The epilot application uses standard ",(0,o.kt)("a",{parentName:"p",href:"https://oauth.net/2/"},"OAuth 2.0")," for user authentication."),(0,o.kt)("h2",{id:"quick-start"},"Quick Start"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npm install --save @epilot/auth\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { authenticate } from '@epilot/auth';\nimport entityClient from '@epilot/entity-client';\n\nconst credentials = await authenticate({\n  username: 'email@example.com',\n  password: 'xxx',\n});\ncredentials.configureClient(entityClient);\n\nawait entityClient.createEntity('contact', { fist_name: 'Example', last_name: 'Contact' });\n\n// entityClient will be authorized using epilot OAuth tokens\n")),(0,o.kt)("h2",{id:"cognito-user-pools"},"Cognito User Pools"),(0,o.kt)("p",null,"Each tenant organisation in epilot has their own Cognito user pool backend and OAuth configuration to provide login and 3rd party Single Sign-On."),(0,o.kt)("h2",{id:"user-api"},"User API"),(0,o.kt)("p",null,"The epilot user API provides functionality to invite and manage users in epilot organisations."),(0,o.kt)("p",null,"The Cognito sync service part of the User API takes care of managing users in each User Pool."))}d.isMDXComponent=!0}}]);